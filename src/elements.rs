use crate::element::Element;

pub const STRING:                  Element = Element::new("STRING");
pub const NUMBER:                  Element = Element::new("NUMBER");
pub const IDENTIFIER:              Element = Element::new("IDENTIFIER");
pub const WHITESPACE:              Element = Element::new("WHITESPACE");
pub const ENDLINE:                 Element = Element::new("ENDLINE");
pub const KEYWORD_AS:              Element = Element::new("AS");
pub const KEYWORD_CATCH:           Element = Element::new("CATCH");
pub const KEYWORD_CLASS:           Element = Element::new("CLASS");
pub const KEYWORD_DEFAULT:         Element = Element::new("DEFAULT");
pub const KEYWORD_DO:              Element = Element::new("DO");
pub const KEYWORD_ELSE:            Element = Element::new("ELSE");
pub const KEYWORD_EXPORT:          Element = Element::new("EXPORT");
pub const KEYWORD_FINALLY:         Element = Element::new("FINALLY");
pub const KEYWORD_FOR:             Element = Element::new("FOR");
pub const KEYWORD_FROM:            Element = Element::new("FROM");
pub const KEYWORD_FUNCTION:        Element = Element::new("FUNCTION");
pub const KEYWORD_IF:              Element = Element::new("IF");
pub const KEYWORD_IMPORT:          Element = Element::new("IMPORT");
pub const KEYWORD_IN:              Element = Element::new("IN");
pub const KEYWORD_LET:             Element = Element::new("LET");
pub const KEYWORD_LOOP:            Element = Element::new("LOOP");
pub const KEYWORD_PRIVATE:         Element = Element::new("PRIVATE");
pub const KEYWORD_PROTECTED:       Element = Element::new("PROTECTED");
pub const KEYWORD_PUBLIC:          Element = Element::new("PUBLIC");
pub const KEYWORD_RETURN:          Element = Element::new("RETURN");
pub const KEYWORD_STATIC:          Element = Element::new("STATIC");
pub const KEYWORD_THEN:            Element = Element::new("THEN");
pub const KEYWORD_THROW:           Element = Element::new("THROW");
pub const KEYWORD_TRY:             Element = Element::new("TRY");
pub const KEYWORD_WHILE:           Element = Element::new("WHILE");
pub const SYMBOL_PLUS:             Element = Element::new("PLUS");
pub const SYMBOL_PLUS_EQ:          Element = Element::new("PLUS_EQ");
pub const SYMBOL_MINUS:            Element = Element::new("MINUS");
pub const SYMBOL_MINUS_EQ:         Element = Element::new("MINUS_EQ");
pub const SYMBOL_ASTERISK:         Element = Element::new("ASTERISK");
pub const SYMBOL_ASTERISK_EQ:      Element = Element::new("ASTERISK_EQ");
pub const SYMBOL_ASTERISK_D:       Element = Element::new("ASTERISK_D");
pub const SYMBOL_ASTERISK_D_EQ:    Element = Element::new("ASTERISK_D_EQ");
pub const SYMBOL_SLASH:            Element = Element::new("SLASH");
pub const SYMBOL_SLASH_EQ:         Element = Element::new("SLASH_EQ");
pub const SYMBOL_PERCENT:          Element = Element::new("PERCENT");
pub const SYMBOL_PERCENT_EQ:       Element = Element::new("PERCENT_EQ");
pub const SYMBOL_CARET:            Element = Element::new("CARET");
pub const SYMBOL_CARET_EQ:         Element = Element::new("CARET_EQ");
pub const SYMBOL_EXCLAMATION:      Element = Element::new("EXCLAMATION");
pub const SYMBOL_EXCLAMATION_EQ:   Element = Element::new("EXCLAMATION_EQ");
pub const SYMBOL_EQUAL:            Element = Element::new("EQUAL");
pub const SYMBOL_EQUAL_D:          Element = Element::new("EQUAL_D");
pub const SYMBOL_ARROW:            Element = Element::new("ARROW");
pub const SYMBOL_PIPE:             Element = Element::new("PIPE");
pub const SYMBOL_PIPE_EQ:          Element = Element::new("PIPE_EQ");
pub const SYMBOL_PIPE_D:           Element = Element::new("PIPE_D");
pub const SYMBOL_PIPE_D_EQ:        Element = Element::new("PIPE_D_EQ");
pub const SYMBOL_AMPERSAND:        Element = Element::new("AMPERSAND");
pub const SYMBOL_AMPERSAND_EQ:     Element = Element::new("AMPERSAND_EQ");
pub const SYMBOL_AMPERSAND_D:      Element = Element::new("AMPERSAND_D");
pub const SYMBOL_AMPERSAND_D_EQ:   Element = Element::new("AMPERSAND_D_EQ");
pub const SYMBOL_GUILLEMET_L:      Element = Element::new("GUILLEMET_L");
pub const SYMBOL_GUILLEMET_R:      Element = Element::new("GUILLEMET_R");
pub const SYMBOL_GUILLEMET_L_EQ:   Element = Element::new("GUILLEMET_L_EQ");
pub const SYMBOL_GUILLEMET_R_EQ:   Element = Element::new("GUILLEMET_R_EQ");
pub const SYMBOL_GUILLEMET_L_D:    Element = Element::new("GUILLEMET_L_D");
pub const SYMBOL_GUILLEMET_R_D:    Element = Element::new("GUILLEMET_R_D");
pub const SYMBOL_GUILLEMET_L_D_EQ: Element = Element::new("GUILLEMET_L_D_EQ");
pub const SYMBOL_GUILLEMET_R_D_EQ: Element = Element::new("GUILLEMET_R_D_EQ");
pub const SYMBOL_GUILLEMET_L_T:    Element = Element::new("GUILLEMET_L_T");
pub const SYMBOL_GUILLEMET_R_T:    Element = Element::new("GUILLEMET_R_T");
pub const SYMBOL_GUILLEMET_L_T_EQ: Element = Element::new("GUILLEMET_L_T_EQ");
pub const SYMBOL_GUILLEMET_R_T_EQ: Element = Element::new("GUILLEMET_R_T_EQ");
pub const SYMBOL_PARENTHESIS_L:    Element = Element::new("PARENTHESIS_R");
pub const SYMBOL_PARENTHESIS_R:    Element = Element::new("PARENTHESIS_R");
pub const SYMBOL_BRACE_L:          Element = Element::new("BRACE_L");
pub const SYMBOL_BRACE_R:          Element = Element::new("BRACE_R");
pub const SYMBOL_CROTCHET_L:       Element = Element::new("CROTCHET_L");
pub const SYMBOL_CROTCHET_R:       Element = Element::new("CROTCHET_R");
pub const SYMBOL_DOT:              Element = Element::new("DOT");
pub const SYMBOL_DOT_D:            Element = Element::new("DOT_D");
pub const SYMBOL_DOT_T:            Element = Element::new("DOT_T");
pub const SYMBOL_COMMA:            Element = Element::new("COMMA");
pub const SYMBOL_TILDE:            Element = Element::new("TILDE");
pub const SYMBOL_DOLLAR:           Element = Element::new("DOLLAR");
pub const SYMBOL_INTERROGATION:    Element = Element::new("INTERROGATION");
pub const SYMBOL_COLON:            Element = Element::new("COLON");
pub const SYMBOL_SEMICOLON:        Element = Element::new("SEMICOLON");
pub const SYMBOL_BACKSLASH:        Element = Element::new("BACKSLASH");

pub const PRODUCTION_ROOT:       Element = Element::new("ROOT");
pub const PRODUCTION_STATEMENTS: Element = Element::new("STATEMENTS");
pub const PRODUCTION_STATEMENT:  Element = Element::new("STATEMENT");
